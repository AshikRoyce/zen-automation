{
  "warmup": [
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Add Five",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "template": "function addFive(num) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(addFive(5));\nconsole.log(addFive(0));\nconsole.log(addFive(-5));",
      "outputDescription": "",
      "testCases": [
        {
          "input": "",
          "output": 10
        },
        {
          "input": "",
          "output": 5
        },
        {
          "input": "",
          "output": 0
        }
      ],
      "sampleInput": "",
      "question": "Write a function called \"addFive\".\nGiven a number, \"addFive\" returns 5 added to that number.",
      "inputDescription": "",
      "qid": 1
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Get Opposite",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "testCases": [
        {
          "input": "",
          "output": -5
        },
        {
          "input": "",
          "output": 0
        },
        {
          "input": "",
          "output": 5
        },
        {
          "input": "",
          "output": -1
        },
        {
          "input": "",
          "output": -1
        }
      ],
      "sampleInput": "",
      "qid": 2,
      "question": "Write a function called \"getOpposite\".\nGiven a number, return its opposite",
      "template": "function getOpposite(num) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\n\n\nconsole.log(getOpposite(5));\nconsole.log(getOpposite(0));\nconsole.log(getOpposite(-5));\nconsole.log(getOpposite(\"5a\"));\nconsole.log(getOpposite(5.5));",
      "inputDescription": ""
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Minutes to Seconds",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 3,
      "question": "Fill in your code that takes an number minutes and converts it to seconds.",
      "template": "function toSeconds(min) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\n\nconsole.log(toSeconds(5) );\nconsole.log(toSeconds(3) );\nconsole.log(toSeconds(2) );\n",
      "testCases": [
        {
          "input": "",
          "output": 300
        },
        {
          "input": "",
          "output": 180
        },
        {
          "input": "",
          "output": 120
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "To Integer",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 4,
      "question": "Create a function that takes a string and returns it as an integer.",
      "template": "function toInteger(mystr) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\n\nconsole.log(toInteger(\"6\"));\nconsole.log(toInteger(\"1000\"));\nconsole.log(toInteger(\"12\"));",
      "testCases": [
        {
          "input": "",
          "output": 6
        },
        {
          "input": "",
          "output": 1000
        },
        {
          "input": "",
          "output": 12
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Next Number",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 5,
      "question": "Create a function that takes a number as an argument, increments the number by +1 and returns the result.",
      "template": "function nextNumber(myint) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\n\nconsole.log(nextNumber(0));\nconsole.log(nextNumber(9));\nconsole.log(nextNumber(-3));",
      "testCases": [
        {
          "input": "",
          "output": 1
        },
        {
          "input": "",
          "output": 10
        },
        {
          "input": "",
          "output": -2
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "First Element",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 6,
      "question": "Create a function that takes an array and returns the first element.",
      "template": "function getFirstElement(arr) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\n\nconsole.log(getFirstElement([1, 2, 3]));\nconsole.log(getFirstElement([80, 5, 100]));\nconsole.log(getFirstElement([-500, 0, 50]));",
      "testCases": [
        {
          "input": "",
          "output": 1
        },
        {
          "input": "",
          "output": 80
        },
        {
          "input": "",
          "output": -500
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Hours To Seconds",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 7,
      "question": "Write a function that converts hours into seconds.",
      "template": "function hourToSeconds(hours) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(hourToSeconds(24));\nconsole.log(hourToSeconds(10));\nconsole.log(hourToSeconds(2));",
      "testCases": [
        {
          "input": "",
          "output": 86400
        },
        {
          "input": "",
          "output": 36000
        },
        {
          "input": "",
          "output": 7200
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Find the Perimeter of a Rectangle",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 8,
      "question": "Create a function that takes height and width and finds the perimeter of a rectangle.",
      "template": "function findPerimeter(num1,num2) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(findPerimeter(6, 7));\nconsole.log(findPerimeter(20, 10));\nconsole.log(findPerimeter(2, 9));",
      "testCases": [
        {
          "input": "",
          "output": 26
        },
        {
          "input": "",
          "output": 60
        },
        {
          "input": "",
          "output": 22
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Less Than 100?",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 9,
      "question": "Given two numbers, return true if the sum of both numbers is less than 100. Otherwise return false.",
      "template": "function lessThan100(num1,num2) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(lessThan100(22, 15));\nconsole.log(lessThan100(83, 34));",
      "testCases": [
        {
          "input": "",
          "output": true
        },
        {
          "input": "",
          "output": false
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Reminder",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 10,
      "question": "There is a single operator in JavaScript, capable of providing the remainder of a division operation. Two numbers are passed as parameters. The first parameter divided by the second parameter will have a remainder, possibly zero. Return that value.",
      "template": "function remainder(num1,num2) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(remainder(1, 3));\nconsole.log(remainder(3, 4))\nconsole.log(remainder(-9, 45));\nconsole.log(remainder(5, 5));",
      "testCases": [
        {
          "input": "",
          "output": 1
        },
        {
          "input": "",
          "output": 3
        },
        {
          "input": "",
          "output": -9
        },
        {
          "input": "",
          "output": 0
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Old macdonald had a farm",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 11,
      "question": "MacDonald is asking you to tell him how many legs can be counted among all his animals. The farmer breeds three species:<br>turkey = 2 legs<br>horse = 4 legs<br>pigs = 4 legs<br>The farmer has counted his animals and he gives you a subtotal for each species. You have to implement a function that returns the total number of legs of all the animals.",
      "template": "function CountAnimals(tur,horse,pigs) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\n\nconsole.log(CountAnimals(2, 3, 5));\nconsole.log(CountAnimals(1, 2, 3));\nconsole.log(CountAnimals(5, 2, 8));\n",
      "testCases": [
        {
          "input": "",
          "output": 36
        },
        {
          "input": "",
          "output": 22
        },
        {
          "input": "",
          "output": 50
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Frames Per Second",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 12,
      "question": "Create a function that returns the number of frames shown in a given number of minutes for a certain FPS.",
      "template": "function frames(num1,num2) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(frames(1, 1));\nconsole.log(frames(10, 1));\nconsole.log(frames(10, 25));",
      "testCases": [
        {
          "input": "",
          "output": 60
        },
        {
          "input": "",
          "output": 600
        },
        {
          "input": "",
          "output": 15000
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Check if an Integer is Divisible By Five",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 13,
      "question": "Create a function that returns true if an integer is evenly divisible by 5, and false otherwise.",
      "template": "function divisibleByFive(num1) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(divisibleByFive(5));\nconsole.log(divisibleByFive(-55));\nconsole.log(divisibleByFive(37));\n",
      "testCases": [
        {
          "input": "",
          "output": true
        },
        {
          "input": "",
          "output": true
        },
        {
          "input": "",
          "output": false
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Write a function called \"isEven\"",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 14,
      "question": "Write a function called \"isEven\". \"isEven\" Should return whether it is even or not. Return -1 for invalid input.",
      "template": "function isEven(num){\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(isEven(12));\nconsole.log(isEven(0));\nconsole.log(isEven(11));\nconsole.log(isEven(\"11h\"));",
      "testCases": [
        {
          "input": "",
          "output": true
        },
        {
          "input": "",
          "output": true
        },
        {
          "input": "",
          "output": false
        },
        {
          "input": "",
          "output": -1
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Write a function called \"getFullName\".",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 15,
      "question": "Given a first and a last name, \"getFullName\" returns a single string with the given first and last names separated by a single space.",
      "template": "function getFullName(firstName, lastName){\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(getFullName(\"GUVI\", \"GEEK\"));\nconsole.log(getFullName(\"GUVI\" ));\nconsole.log(getFullName( \"GEEK\"));\nconsole.log(getFullName(\"\", \"\"));",
      "testCases": [
        {
          "input": "",
          "output": "GUVI GEEK"
        },
        {
          "input": "",
          "output": "GUVI"
        },
        {
          "input": "",
          "output": "GEEK"
        },
        {
          "input": "",
          "output": ""
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Write a function called \"getLengthOfWord\".",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 16,
      "question": "Given a word, \"getLengthOfWord\" returns the length of the given word.",
      "template": "function getLengthOfWord(word1){\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(getLengthOfWord(\"GUVI\"));\nconsole.log(getLengthOfWord(\"\"));\nconsole.log(getLengthOfWord());\nconsole.log(getLengthOfWord(9));",
      "testCases": [
        {
          "input": "",
          "output": 4
        },
        {
          "input": "",
          "output": 0
        },
        {
          "input": "",
          "output": -1
        },
        {
          "input": "",
          "output": -1
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Write a function called \"isSameLength\".",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 17,
      "question": "Given two words, \"isSameLength\" returns whether the given words have the same length.",
      "template": "function isSameLength(word1, word2){\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(isSameLength(\"GUVI\", \"GEEK\"));\nconsole.log(isSameLength(\"GUVI\", \"ZEN\"));\nconsole.log(isSameLength(\"Hello\", \"GUVI\"));\n",
      "testCases": [
        {
          "input": "",
          "output": true
        },
        {
          "input": "",
          "output": false
        },
        {
          "input": "",
          "output": false
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Calculate the distance",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 18,
      "question": "Create a function to calculate the distance between two points defined by their x, y coordinates.",
      "template": "function getDistance(x1, y1, x2, y2){\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(getDistance(100, 100, 400, 300));\nconsole.log(getDistance(1,2,4,6));",

      "testCases": [
        {
          "input": "",
          "output": 360
        },
        {
          "input": "",
          "output": 5
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Write a function called \"getNthElement\".",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 19,
      "question": "Given an array and an integer, \"getNthElement\" returns the element at the given integer, within the given array. If the array has a length of 0, it should return ‘undefined’.",
      "template": "function getNthElement(array,n){\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(getNthElement([1, 3, 5], 1));\nconsole.log(getNthElement([1, 3, 5], 2));\n",
      "testCases": [
        {
          "input": "",
          "output": 3
        },
        {
          "input": "",
          "output": 5
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Write a function called \"getLastElement\".",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 20,
      "question": "Given an array, \"getLastElement\" returns the last element of the given array. If the given array has a length of 0, it should return '-1'.",
      "template": "function getLastElement(array){\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\nconsole.log(getLastElement([1, 2, 3, 4]));\nconsole.log(getLastElement([1, 2, 3, 4,5,6,7]));\nconsole.log(getLastElement([]));\n",
      "testCases": [
        {
          "input": "",
          "output": 4
        },
        {
          "input": "",
          "output": 7
        },
        {
          "input": "",
          "output": -1
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Write a function called \"getProperty\".",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 21,
      "question": "Given an object and a key, \"getProperty\" returns the value of the property at the given key. If there is no property at the given key, it should return null.",
      "template": "var obj = {\n mykey: 'value'\n};\nfunction getProperty(obj, key) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n }\nconsole.log(getProperty(obj,'mykey'));\nconsole.log(getProperty(obj,'dummykey'));",
      "testCases": [
        {
          "input": "",
          "output": "value"
        },
        {
          "input": "",
          "output": null
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Write a function called \"addProperty\".",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 22,
      "question": "Given an object and a key, \"addProperty\" adds a new property on the given object with a value of true.",
      "template": "var obj = {\n \n};\nfunction addProperty(obj, key){\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\naddProperty(obj, \"mykey\");\nconsole.log(obj.mykey);",
      "testCases": [
        {
          "input": "",
          "output": true
        }
      ]
    },
    {
      "_id": "",
      "userName": "Pugazharasan C",
      "questionName": "Write a function called \"removeProperty\".",
      "hardnessScore": 0.2,
      "tags": [],
      "executionTime": 0,
      "timestamp": "",
      "explanation": "",
      "userid": "",
      "sampleOutput": "",
      "outputDescription": "",
      "sampleInput": "",
      "inputDescription": "",
      "qid": 23,
      "question": "Given an object and a key, \"removeProperty\" removes the given key from the given object.",
      "template": "var obj = {\"mykey\" : \"value\"}\nfunction removeProperty(obj, key){\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\n\nremoveProperty(obj, \"mykey\");\nconsole.log(obj.mykey === undefined);",
      "testCases": [
        {
          "input": "",
          "output": true
        }
      ]
    }
  ],
  "dummy": [
    {
      "qid": 5,
      "question": "Create a function that takes a number as an argument, increments the number by +1 and returns the result.",
      "template": "function nextNumber(myint) {\n  ///Your code Starts here \n\n\n\n\n\n///Your code Ends here\n}\n\nconsole.log(nextNumber(0));\nconsole.log(nextNumber(9));\nconsole.log(nextNumber(-3));",
      "testCases": [
        {
          "input": "",
          "output": 1
        },
        {
          "input": "",
          "output": 10
        },
        {
          "input": "",
          "output": -2
        }
      ]
    }
  ]
}
